package com.raistone.wallet.sealwallet.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.raistone.wallet.sealwallet.factory.AssetsDeatilInfo;
import com.raistone.wallet.sealwallet.factory.ChainDataInfo;
import com.raistone.wallet.sealwallet.factory.HdWallet;
import com.raistone.wallet.sealwallet.factory.ChainAddressInfo;

import com.raistone.wallet.sealwallet.greendao.AssetsDeatilInfoDao;
import com.raistone.wallet.sealwallet.greendao.ChainDataInfoDao;
import com.raistone.wallet.sealwallet.greendao.HdWalletDao;
import com.raistone.wallet.sealwallet.greendao.ChainAddressInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig assetsDeatilInfoDaoConfig;
    private final DaoConfig chainDataInfoDaoConfig;
    private final DaoConfig hdWalletDaoConfig;
    private final DaoConfig chainAddressInfoDaoConfig;

    private final AssetsDeatilInfoDao assetsDeatilInfoDao;
    private final ChainDataInfoDao chainDataInfoDao;
    private final HdWalletDao hdWalletDao;
    private final ChainAddressInfoDao chainAddressInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        assetsDeatilInfoDaoConfig = daoConfigMap.get(AssetsDeatilInfoDao.class).clone();
        assetsDeatilInfoDaoConfig.initIdentityScope(type);

        chainDataInfoDaoConfig = daoConfigMap.get(ChainDataInfoDao.class).clone();
        chainDataInfoDaoConfig.initIdentityScope(type);

        hdWalletDaoConfig = daoConfigMap.get(HdWalletDao.class).clone();
        hdWalletDaoConfig.initIdentityScope(type);

        chainAddressInfoDaoConfig = daoConfigMap.get(ChainAddressInfoDao.class).clone();
        chainAddressInfoDaoConfig.initIdentityScope(type);

        assetsDeatilInfoDao = new AssetsDeatilInfoDao(assetsDeatilInfoDaoConfig, this);
        chainDataInfoDao = new ChainDataInfoDao(chainDataInfoDaoConfig, this);
        hdWalletDao = new HdWalletDao(hdWalletDaoConfig, this);
        chainAddressInfoDao = new ChainAddressInfoDao(chainAddressInfoDaoConfig, this);

        registerDao(AssetsDeatilInfo.class, assetsDeatilInfoDao);
        registerDao(ChainDataInfo.class, chainDataInfoDao);
        registerDao(HdWallet.class, hdWalletDao);
        registerDao(ChainAddressInfo.class, chainAddressInfoDao);
    }
    
    public void clear() {
        assetsDeatilInfoDaoConfig.clearIdentityScope();
        chainDataInfoDaoConfig.clearIdentityScope();
        hdWalletDaoConfig.clearIdentityScope();
        chainAddressInfoDaoConfig.clearIdentityScope();
    }

    public AssetsDeatilInfoDao getAssetsDeatilInfoDao() {
        return assetsDeatilInfoDao;
    }

    public ChainDataInfoDao getChainDataInfoDao() {
        return chainDataInfoDao;
    }

    public HdWalletDao getHdWalletDao() {
        return hdWalletDao;
    }

    public ChainAddressInfoDao getChainAddressInfoDao() {
        return chainAddressInfoDao;
    }

}
